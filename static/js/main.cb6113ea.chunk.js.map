{"version":3,"sources":["Pages/Config.js","Actions/index.js","Pages/Feedback.js","Pages/Login.js","Pages/Home.js","Components/TelaFeedback.js","Components/Timer.js","Components/CardMultipla.js","Pages/Jogo.js","Pages/Ranking.js","App.js","serviceWorker.js","Reducers/perguntasReducer.js","Reducers/reqApiReducer.js","Reducers/timerReducer.js","Reducers/index.js","Store/index.js","index.js"],"names":["Config","data-testid","React","Component","timerAction","tempo","type","payload","remountTimer","op","getApiQuestions","data","dispatch","a","async","fetch","fetchApi","json","jsonObj","results","FeedbackScreen","props","state","gravatarEmail","name","setHashedEmail","bind","setRank","JSON","parse","localStorage","getItem","player","convert","md5","this","setState","score","arr","console","log","push","picture","getRanking","setItem","stringify","total","totalQuestions","history","ajusta","src","alt","feedBack","onClick","connect","perguntasReducer","acertos","questions","time","Login","assertions","verifyFields","shouldRedirect","saveToLocalStore","handleChange","verify","estado","token","objLocalStorage","ranking","old","e","target","value","length","to","htmlFor","id","onChange","disabled","Home","TelaFeedback","Timer","timerFunc","interval","shouldRemount","setInterval","callback","remountThis","dis","clearInterval","timerReducer","timer","bla","CardMultipla","botaoacertoPoints","botaoerradoPoints","saveToLocalStorage","nextButton","mix","disableButtons","indice","click","green","red","answersToDisplay","correctAnswers","forceKey","disable","reqPerguntas","then","perguntas","map","p","incorrect_answers","correct_answer","getDis","addAcertos","countTimer","SCORE","addAssertion","sort","Math","random","key","category","question","answer","i","className","renderBtn","pontos","reqApiReducer","actionss","totalAction","Jogo","Ranking","index","b","renderList","App","path","exact","render","Feedback","Boolean","window","location","hostname","match","INITIAL_VALUE","action","getApiReducer","rootReducers","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb6113ea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Config extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 data-testid=\"settings-title\">Configuracões</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Config;\r\n","const callApi = () => ({\r\n  type: 'CALL_API',\r\n\r\n});\r\n\r\nconst getDataApi = (arr) => ({\r\n  type: 'GET_DATA_API',\r\n  payload: arr,\r\n\r\n});\r\n\r\nexport const totalAction = (pontos) => ({\r\n  type: 'TOTAL',\r\n  payload: pontos,\r\n});\r\n\r\nexport const timerAction = (tempo) => ({\r\n  type: 'REMOVETEMPO',\r\n  payload: tempo,\r\n});\r\n\r\nexport const remountTimer = (op) => ({\r\n  type: 'REMOUNT_TIMER',\r\n  payload: op,\r\n});\r\n\r\nconst getApiQuestions = (data) => async (dispatch) => {\r\n  dispatch(callApi());\r\n\r\n  const fetchApi = await fetch(`https://opentdb.com/api.php?amount=5&token=${data}`);\r\n  const jsonObj = await fetchApi.json();\r\n  const { results } = jsonObj;\r\n  dispatch(getDataApi(results));\r\n};\r\nexport default getApiQuestions;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport md5 from 'crypto-js/md5';\r\nimport { timerAction } from '../Actions';\r\n\r\nclass FeedbackScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      gravatarEmail: '',\r\n      name: '',\r\n\r\n    };\r\n\r\n    this.setHashedEmail = this.setHashedEmail.bind(this);\r\n    this.setRank = this.setRank.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const getLocalStorage = JSON.parse(localStorage.getItem('state'));\r\n    const { gravatarEmail, name } = getLocalStorage.player;\r\n    const convert = md5(gravatarEmail);\r\n    this.setHashedEmail(convert, name);\r\n  }\r\n\r\n  setHashedEmail(gravatarEmail, name) {\r\n    this.setState({\r\n      gravatarEmail,\r\n      name,\r\n    });\r\n  }\r\n\r\n  setRank() {\r\n    const getLocalStorage = JSON.parse(localStorage.getItem('state'));\r\n    const { score, name } = getLocalStorage.player;\r\n    const { gravatarEmail } = this.state;\r\n    const arr = [];\r\n    console.log(`Pontuação - ${score}`);\r\n    arr.push({\r\n      name,\r\n      score,\r\n      picture: `https://www.gravatar.com/avatar/${gravatarEmail}`,\r\n    });\r\n\r\n    let getRanking = JSON.parse(localStorage.getItem('ranking'));\r\n    console.log(getRanking);\r\n    getRanking = [...getRanking, ...arr];\r\n    console.log(getRanking);\r\n    localStorage.setItem('ranking', JSON.stringify(getRanking));\r\n  }\r\n\r\n  feedBack(total) {\r\n    const MIN_CORRECT = 3;\r\n    return total < MIN_CORRECT ? 'Podia ser melhor...' : 'Mandou bem!';\r\n  }\r\n\r\n  render() {\r\n    const { total, totalQuestions, history, ajusta } = this.props;\r\n    const { gravatarEmail, name } = this.state;\r\n    return (\r\n      <div>\r\n        <header>\r\n          <img\r\n            data-testid=\"header-profile-picture\"\r\n            src={ `https://www.gravatar.com/avatar/${gravatarEmail}` }\r\n            alt=\"seila\"\r\n          />\r\n          <h1 data-testid=\"header-player-name\">{ name }</h1>\r\n          <p data-testid=\"feedback-total-score\">{ total }</p>\r\n          <p data-testid=\"header-score\">{ total }</p>\r\n          <p data-testid=\"feedback-total-question\">{ totalQuestions }</p>\r\n        </header>\r\n        <h1 data-testid=\"feedback-text\">{ this.feedBack(totalQuestions) }</h1>\r\n        <button\r\n          type=\"button\"\r\n          data-testid=\"btn-play-again\"\r\n          onClick={ () => {\r\n            const TIMER = 30;\r\n            ajusta(TIMER);\r\n            history.push('/');\r\n          } }\r\n        >\r\n          Jogar Novamente\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          data-testid=\"btn-ranking\"\r\n          onClick={ () => {\r\n            this.setRank();\r\n            history.push('/ranking');\r\n          } }\r\n        >\r\n          Ranking\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  total: state.perguntasReducer.acertos,\r\n  totalQuestions: state.perguntasReducer.questions,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  ajusta: (time) => dispatch(timerAction(time)),\r\n});\r\n\r\nFeedbackScreen.propTypes = {\r\n  ajusta: PropTypes.func.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  totalQuestions: PropTypes.number.isRequired,\r\n  history: PropTypes.shape(PropTypes.any).isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbackScreen);\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      assertions: 0,\r\n      score: 0,\r\n      gravatarEmail: '',\r\n      verifyFields: true,\r\n      shouldRedirect: false,\r\n    };\r\n\r\n    this.saveToLocalStore = this.saveToLocalStore.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.verify = this.verify.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { assertions, score } = this.state;\r\n    console.log(`${assertions} and ${score}`);\r\n  }\r\n\r\n  async saveToLocalStore() {\r\n    const estado = this.state;\r\n    const fetchApi = await fetch('https://opentdb.com/api_token.php?command=request');\r\n    const jsonObj = await fetchApi.json();\r\n    const { token } = jsonObj;\r\n\r\n    const objLocalStorage = {\r\n      player: estado,\r\n    };\r\n    objLocalStorage.player.assertions = 0;\r\n    objLocalStorage.player.score = 0;\r\n    const ranking = [];\r\n    const old = JSON.parse(localStorage.getItem('ranking'));\r\n    console.log(`Old Ranking: ${old}`);\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('state', JSON.stringify(objLocalStorage));\r\n    if (!old) {\r\n      console.log('Cria Ranking');\r\n      localStorage.setItem('ranking', JSON.stringify(ranking));\r\n    }\r\n\r\n    this.setState({ shouldRedirect: true });\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { name } = e.target;\r\n    this.setState({\r\n      [name]: e.target.value,\r\n    });\r\n\r\n    this.verify();\r\n  }\r\n\r\n  verify() {\r\n    const { gravatarEmail, name } = this.state;\r\n    if (gravatarEmail.length > 0 && name.length > 0) {\r\n      this.setState({ verifyFields: false });\r\n      return;\r\n    }\r\n    this.setState({ verifyFields: true });\r\n  }\r\n\r\n  render() {\r\n    const { verifyFields, shouldRedirect } = this.state;\r\n    if (shouldRedirect) return <Redirect to=\"/jogo\" />;\r\n    return (\r\n      <div>\r\n        <label htmlFor=\"input-player-name\">\r\n          Nome:\r\n          <input\r\n            type=\"text\"\r\n            id=\"input-player-name\"\r\n            data-testid=\"input-player-name\"\r\n            name=\"name\"\r\n            onChange={ this.handleChange }\r\n          />\r\n        </label>\r\n        <label htmlFor=\"input-gravatar-email\">\r\n          Email:\r\n          <input\r\n            type=\"text\"\r\n            data-testid=\"input-gravatar-email\"\r\n            id=\"input-gravatar-email\"\r\n            name=\"gravatarEmail\"\r\n            onChange={ this.handleChange }\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"button\"\r\n          data-testid=\"btn-play\"\r\n          disabled={ verifyFields }\r\n          onClick={ this.saveToLocalStore }\r\n        >\r\n          Jogar\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Login from './Login';\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    const { history } = this.props;\r\n    return (\r\n      <div>\r\n        <Login props={ this.props } />\r\n        <button\r\n          type=\"button\"\r\n          onClick={ () => history.push('/config') }\r\n          data-testid=\"btn-settings\"\r\n        >\r\n          Configurações\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport md5 from 'crypto-js/md5';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TelaFeedback extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      gravatarEmail: '',\r\n      name: '',\r\n\r\n    };\r\n\r\n    this.setHashedEmail = this.setHashedEmail.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const getLocalStorage = JSON.parse(localStorage.getItem('state'));\r\n    const { gravatarEmail, name } = getLocalStorage.player;\r\n    const convert = md5(gravatarEmail);\r\n    this.setHashedEmail(convert, name);\r\n  }\r\n\r\n  setHashedEmail(gravatarEmail, name) {\r\n    this.setState({\r\n      gravatarEmail,\r\n      name,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { gravatarEmail, name } = this.state;\r\n    const { total } = this.props;\r\n\r\n    return (\r\n      <header>\r\n        <img\r\n          data-testid=\"header-profile-picture\"\r\n          src={ `https://www.gravatar.com/avatar/${gravatarEmail}` }\r\n          alt=\"seila\"\r\n        />\r\n        <h1 data-testid=\"header-player-name\">{name}</h1>\r\n        <p data-testid=\"header-score\">{total}</p>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  total: state.perguntasReducer.acertos,\r\n});\r\n\r\nTelaFeedback.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TelaFeedback);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { remountTimer, timerAction } from '../Actions/index';\r\n\r\nclass Timer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.timerFunc = this.timerFunc.bind(this);\r\n\r\n    this.state = {\r\n      interval: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { shouldRemount } = this.props;\r\n    shouldRemount(false);\r\n    this.timerFunc();\r\n  }\r\n\r\n  timerFunc() {\r\n    const ONE_SECOND = 1000;\r\n    // const{ reset } = this.props;\r\n    // this.setState({ count: reset() });\r\n    const interval = setInterval(() => {\r\n      const { total, ajusta } = this.props;\r\n      ajusta(total - 1);\r\n    }, ONE_SECOND);\r\n\r\n    this.setState({ interval });\r\n  }\r\n\r\n  render() {\r\n    const { interval } = this.state;\r\n    const { total, callback, remountThis, dis } = this.props;\r\n    if (total === 0) {\r\n      clearInterval(interval);\r\n      callback();\r\n      dis(true);\r\n    }\r\n\r\n    if (remountThis) {\r\n      clearInterval(interval);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>{ total }</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  ajusta: (bla) => dispatch(timerAction(bla)),\r\n  shouldRemount: (op) => dispatch(remountTimer(op)),\r\n});\r\nconst mapSateToProps = (state) => ({\r\n  total: state.timerReducer.timer,\r\n  remountThis: state.timerReducer.shouldRemount,\r\n});\r\n\r\nTimer.propTypes = {\r\n  ajusta: PropTypes.func.isRequired,\r\n  shouldRemount: PropTypes.func.isRequired,\r\n\r\n  remountThis: PropTypes.bool.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  callback: PropTypes.func.isRequired,\r\n  dis: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapSateToProps, mapDispatchToProps)(Timer);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport actionss, { remountTimer, timerAction, totalAction } from '../Actions/index';\r\nimport '../css/acertoErrocss.css';\r\nimport Timer from './Timer';\r\n\r\nclass CardMultipla extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.botaoacertoPoints = this.botaoacertoPoints.bind(this);\r\n    this.botaoerradoPoints = this.botaoerradoPoints.bind(this);\r\n    this.saveToLocalStorage = this.saveToLocalStorage.bind(this);\r\n    this.nextButton = this.nextButton.bind(this);\r\n    this.mix = this.mix.bind(this);\r\n    this.disableButtons = this.disableButtons.bind(this);\r\n\r\n    this.state = {\r\n      indice: 0,\r\n      acertos: 0,\r\n      click: false,\r\n      green: '',\r\n      red: '',\r\n      answersToDisplay: [],\r\n      correctAnswers: [],\r\n      forceKey: 0,\r\n      disable: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { reqPerguntas } = this.props;\r\n    const token = localStorage.getItem('token');\r\n    reqPerguntas(token).then(() => {\r\n      const { perguntas } = this.props;\r\n      const arr = perguntas[0];\r\n      const answersToDisplay = [];\r\n      const correctAnswers = [];\r\n      arr.map((p) => {\r\n        answersToDisplay.push(this.mix([...p.incorrect_answers, p.correct_answer]));\r\n        correctAnswers.push(p.correct_answer);\r\n        return true;\r\n      });\r\n      this.setState({\r\n        answersToDisplay,\r\n        correctAnswers,\r\n        disable: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  disableButtons(getDis) {\r\n    if (getDis) {\r\n      this.setState({ disable: true });\r\n    }\r\n    /* const wrongs = Array.from(document.getElementsByClassName('red'));\r\n    wrongs.map((btn) => btn.disabled = true);\r\n    // document.querySelector('.green').disabled = true; */\r\n  }\r\n\r\n  botaoacertoPoints() {\r\n    const { shouldRemount } = this.props;\r\n    const { addAcertos, countTimer } = this.props;\r\n    const { click, acertos } = this.state;\r\n    shouldRemount(true);\r\n    const BASIS_SCORE = 10;\r\n    const ONE = 1;\r\n\r\n    const SCORE = BASIS_SCORE + (countTimer);\r\n    this.saveToLocalStorage(acertos + SCORE, ONE);\r\n    if (!click) {\r\n      this.setState((state) => ({\r\n        acertos: state.acertos + SCORE,\r\n        click: true,\r\n        green: 'green',\r\n        red: 'red',\r\n      }));\r\n      addAcertos(acertos + SCORE);\r\n    }\r\n  }\r\n\r\n  botaoerradoPoints() {\r\n    const estado = JSON.parse(localStorage.getItem('state'));\r\n    const { score } = estado.player;\r\n    const { shouldRemount } = this.props;\r\n    shouldRemount(true);\r\n    this.setState(() => ({\r\n      click: true,\r\n      red: 'red',\r\n      green: 'green',\r\n    }));\r\n    this.disableButtons();\r\n    this.saveToLocalStorage(score, 0);\r\n  }\r\n\r\n  saveToLocalStorage(score, addAssertion) {\r\n    const estado = JSON.parse(localStorage.getItem('state'));\r\n    let { assertions } = estado.player;\r\n    assertions += addAssertion;\r\n    estado.player = { ...estado.player, score, assertions };\r\n    console.log(estado.player);\r\n    localStorage.setItem('state', JSON.stringify(estado));\r\n  }\r\n\r\n  nextButton() {\r\n    const { indice, forceKey } = this.state;\r\n    const { history, ajusta, shouldRemount } = this.props;\r\n    const TIMER = 30;\r\n    const INDEX_LIMITER = 4;\r\n    if (indice < INDEX_LIMITER) {\r\n      ajusta(TIMER);\r\n      shouldRemount(true);\r\n      this.setState((state) => ({\r\n        click: false,\r\n        indice: state.indice + 1,\r\n        green: '',\r\n        red: '',\r\n        forceKey: forceKey + 1,\r\n      }));\r\n    } else {\r\n      history.history.push('/feedback');\r\n    }\r\n  }\r\n\r\n  mix(arr) {\r\n    const RANDOM = 0.5;\r\n    return arr.sort(() => Math.random() - RANDOM);\r\n  }\r\n\r\n  renderBtn() {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        data-testid=\"btn-next\"\r\n        onClick={ () => this.nextButton() }\r\n      >\r\n        {' '}\r\n        Proximo\r\n      </button>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { perguntas, countTimer } = this.props;\r\n    const arr = perguntas[0];\r\n    const { indice, click, green, red, forceKey } = this.state;\r\n    const { answersToDisplay, correctAnswers, disable } = this.state;\r\n    const TWO = 2;\r\n    const THREE = 3;\r\n\r\n    return (\r\n\r\n      <div>\r\n        <Timer\r\n          key={ forceKey }\r\n          callback={ this.botaoerradoPoints }\r\n          dis={ this.disableButtons }\r\n        />\r\n        <h1 data-testid=\"question-category\">{ arr[indice].category }</h1>\r\n        <p data-testid=\"question-text\">{ arr[indice].question }</p>\r\n        { answersToDisplay[indice] && answersToDisplay[indice].map((answer, i) => {\r\n          if (answer === correctAnswers[indice]) {\r\n            return (\r\n              <button\r\n                type=\"button\"\r\n                className={ green }\r\n                onClick={ (e) => this.botaoacertoPoints(e) }\r\n                key={ answer }\r\n                disabled={ disable }\r\n                data-testid=\"correct-answer\"\r\n              >\r\n                { answer }\r\n              </button>);\r\n          }\r\n          return (\r\n            <button\r\n              type=\"button\"\r\n              className={ red }\r\n              onClick={ (e) => this.botaoerradoPoints(e) }\r\n              key={ answer }\r\n              disabled={ disable }\r\n              data-testid={ `wrong-answer${i <= TWO ? i : THREE}` }\r\n            >\r\n              { answer }\r\n            </button>);\r\n        }) }\r\n\r\n        { (click || countTimer === 0) && this.renderBtn() }\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  pontos: state.perguntasReducer.acertos,\r\n  questions: state.perguntasReducer.questions,\r\n  perguntas: state.reqApiReducer.results,\r\n  countTimer: state.timerReducer.timer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  reqPerguntas: (token) => dispatch(actionss(token)),\r\n  addAcertos: (pontos) => dispatch(totalAction(pontos)),\r\n  ajusta: (time) => dispatch(timerAction(time)),\r\n  shouldRemount: (op) => dispatch(remountTimer(op)),\r\n});\r\n\r\nCardMultipla.propTypes = {\r\n  reqPerguntas: PropTypes.func.isRequired,\r\n  addAcertos: PropTypes.func.isRequired,\r\n  ajusta: PropTypes.func.isRequired,\r\n  shouldRemount: PropTypes.func.isRequired,\r\n\r\n  perguntas: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  countTimer: PropTypes.number.isRequired,\r\n\r\n  history: PropTypes.shape(PropTypes.any).isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardMultipla);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport actionss from '../Actions/index';\r\nimport TelaFeedback from '../Components/TelaFeedback';\r\nimport CardMultipla from '../Components/CardMultipla';\r\n\r\nclass Jogo extends React.Component {\r\n  componentDidMount() {\r\n    const { reqPerguntas } = this.props;\r\n    const token = localStorage.getItem('token');\r\n    reqPerguntas(token);\r\n  }\r\n\r\n  render() {\r\n    const { perguntas } = this.props;\r\n    const array = perguntas[0];\r\n\r\n    if (!array) return <p>Carregando...</p>;\r\n    return (\r\n      <div>\r\n        <TelaFeedback />\r\n        <CardMultipla history={ this.props } />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  perguntas: state.reqApiReducer.results,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  reqPerguntas: (token) => dispatch(actionss(token)),\r\n});\r\n\r\nJogo.propTypes = {\r\n  reqPerguntas: PropTypes.func.isRequired,\r\n  perguntas: PropTypes.arrayOf(\r\n    PropTypes.string,\r\n  ).isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Jogo);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { timerAction } from '../Actions';\r\n\r\nclass Ranking extends React.Component {\r\n  renderList(p, index) {\r\n    const { name, score, picture } = p;\r\n    return (\r\n      <li className=\"rank-list\">\r\n        <img src={ picture } alt={ name } />\r\n        <p data-testid={ `player-name-${index}` }>{ name }</p>\r\n        <p data-testid={ `player-score-${index}` }>{ score }</p>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\r\n    const { ajusta, history } = this.props;\r\n    console.log(ranking);\r\n    return (\r\n      <div>\r\n        <h1 data-testid=\"ranking-title\">Ranking</h1>\r\n        <button\r\n          type=\"button\"\r\n          data-testid=\"btn-go-home\"\r\n          onClick={ () => {\r\n            const TIMER = 30;\r\n            ajusta(TIMER);\r\n            history.push('/');\r\n          } }\r\n        >\r\n          Jogar Novamente\r\n        </button>\r\n        <ul>\r\n          { ranking\r\n            .sort((a, b) => b.score - a.score)\r\n            .map((p, index) => this.renderList(p, index)) }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  ajusta: (time) => dispatch(timerAction(time)),\r\n});\r\n\r\nRanking.propTypes = {\r\n  history: PropTypes.shape(PropTypes.any).isRequired,\r\n  ajusta: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Ranking);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Config from './Pages/Config';\r\nimport FeedbackScreen from './Pages/Feedback';\r\n\r\nimport Home from './Pages/Home';\r\nimport Jogo from './Pages/Jogo';\r\nimport Ranking from './Pages/Ranking';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact render={ (props) => <Home { ...props } /> } />\r\n        <Route path=\"/config\" exact render={ (props) => <Config { ...props } /> } />\r\n        <Route path=\"/jogo\" exact render={ (props) => <Jogo { ...props } /> } />\r\n        <Route\r\n          path=\"/feedback\"\r\n          exact\r\n          render={ (props) => <FeedbackScreen { ...props } /> }\r\n        />\r\n        <Route\r\n          path=\"/ranking\"\r\n          exact\r\n          render={ (props) => <Ranking { ...props } /> }\r\n        />\r\n\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const INITIAL_VALUE = {\r\n  acertos: 0,\r\n  questions: 0,\r\n};\r\n\r\nconst perguntasReducer = (state = INITIAL_VALUE, action) => {\r\n  switch (action.type) {\r\n  case 'TOTAL':\r\n    return { ...state, acertos: action.payload, questions: state.questions + 1 };\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default perguntasReducer;\r\n","const INITIAL_VALUE = {\r\n  results: [],\r\n};\r\n\r\nconst getApiReducer = (state = INITIAL_VALUE, action) => {\r\n  switch (action.type) {\r\n  case 'GET_DATA_API':\r\n    return { ...state, results: [action.payload] };\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default getApiReducer;\r\n","const INITIAL_VALUE = {\r\n  timer: 30,\r\n  shouldRemount: false,\r\n};\r\n\r\nconst timerReducer = (state = INITIAL_VALUE, action) => {\r\n  switch (action.type) {\r\n  case 'REMOVETEMPO':\r\n    return { ...state, timer: action.payload };\r\n  case 'REMOUNT_TIMER':\r\n    return { ...state, shouldRemount: action.payload };\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default timerReducer;\r\n","import { combineReducers } from 'redux';\r\nimport perguntasReducer from './perguntasReducer';\r\nimport reqApiReducer from './reqApiReducer';\r\nimport timerReducer from './timerReducer';\r\n\r\nconst rootReducers = combineReducers({ reqApiReducer, perguntasReducer, timerReducer });\r\n\r\nexport default rootReducers;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from '../Reducers/index';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './Store/index';\r\n\r\nReactDOM.render(\r\n  <Provider store={ store }>\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}